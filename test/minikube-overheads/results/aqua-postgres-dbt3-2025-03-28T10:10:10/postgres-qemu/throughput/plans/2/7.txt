BEGIN;
BEGIN
EXPLAIN
select
	supp_nation,
	cust_nation,
	l_year,
	sum(volume) as revenue
from
	(
		select
			n1.n_name as supp_nation,
			n2.n_name as cust_nation,
			extract(year from l_shipdate) as l_year,
			l_extendedprice * (1 - l_discount) as volume
		from
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2
		where
			s_suppkey = l_suppkey
			and o_orderkey = l_orderkey
			and c_custkey = o_custkey
			and s_nationkey = n1.n_nationkey
			and c_nationkey = n2.n_nationkey
			and (
				(n1.n_name = 'JORDAN' and n2.n_name = 'IRAN')
				or (n1.n_name = 'IRAN' and n2.n_name = 'JORDAN')
			)
			and l_shipdate between date '1995-01-01' and date '1996-12-31'
	) as shipping
group by
	supp_nation,
	cust_nation,
	l_year
order by
	supp_nation,
	cust_nation,
	l_year;
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=42444.99..42774.77 rows=3064 width=116)
   Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
   ->  Gather Merge  (cost=42444.99..42706.28 rows=1802 width=116)
         Workers Planned: 1
         ->  Partial GroupAggregate  (cost=41444.98..41503.55 rows=1802 width=116)
               Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               ->  Sort  (cost=41444.98..41449.49 rows=1802 width=96)
                     Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                     ->  Hash Join  (cost=309.94..41347.53 rows=1802 width=96)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'JORDAN'::bpchar) AND (n2.n_name = 'IRAN'::bpchar)) OR ((n1.n_name = 'IRAN'::bpchar) AND (n2.n_name = 'JORDAN'::bpchar)))
                           ->  Nested Loop  (cost=2.26..40771.27 rows=51935 width=46)
                                 ->  Nested Loop  (cost=1.82..6363.09 rows=24673 width=34)
                                       ->  Hash Join  (cost=1.40..1985.92 rows=2941 width=30)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..1871.65 rows=36765 width=8)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30)
                                                         Filter: ((n_name = 'IRAN'::bpchar) OR (n_name = 'JORDAN'::bpchar))
                                       ->  Index Scan using orders_o_custkey_idx on orders  (cost=0.42..1.41 rows=8 width=12)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using pk_lineitem on lineitem  (cost=0.43..1.35 rows=4 width=28)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=299.35..299.35 rows=667 width=30)
                                 ->  Hash Join  (cost=1.40..299.35 rows=667 width=30)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..272.36 rows=8336 width=8)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30)
                                                   Filter: ((n_name = 'JORDAN'::bpchar) OR (n_name = 'IRAN'::bpchar))
(31 rows)

COMMIT;
COMMIT
