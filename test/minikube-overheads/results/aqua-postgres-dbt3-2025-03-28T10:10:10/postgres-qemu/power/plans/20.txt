BEGIN;
BEGIN
EXPLAIN
select
	s_name,
	s_address
from
	supplier,
	nation
where
	s_suppkey in (
		select
			ps_suppkey
		from
			partsupp
		where
			ps_partkey in (
				select
					p_partkey
				from
					part
				where
					p_name like 'blush%'
			)
			and ps_availqty > (
				select
					0.5 * sum(l_quantity)
				from
					lineitem
				where
					l_partkey = ps_partkey
					and l_suppkey = ps_suppkey
					and l_shipdate >= '1996-01-01'
					and l_shipdate < cast(date '1996-01-01' + interval '1 year' as date)
			)
	)
	and s_nationkey = n_nationkey
	and n_name = 'GERMANY'
order by
	s_name;
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1193212213.27..1193212213.44 rows=70 width=51)
   Sort Key: supplier.s_name
   ->  Nested Loop  (cost=0.42..1193212211.12 rows=70 width=51)
         Join Filter: (nation.n_nationkey = supplier.s_nationkey)
         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
               Filter: (n_name = 'GERMANY'::bpchar)
         ->  Nested Loop Semi Join  (cost=0.42..1193212187.95 rows=1749 width=55)
               Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
               ->  Seq Scan on supplier  (cost=0.00..272.36 rows=8336 width=59)
               ->  Materialize  (cost=0.42..1192949711.95 rows=2097 width=4)
                     ->  Nested Loop  (cost=0.42..1192949701.47 rows=2097 width=4)
                           ->  Seq Scan on part  (cost=0.00..5391.09 rows=1599 width=4)
                                 Filter: ((p_name)::text ~~ 'blush%'::text)
                           ->  Index Scan using pk_partsupp on partsupp  (cost=0.42..746056.47 rows=1 width=8)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 SubPlan 1
                                   ->  Aggregate  (cost=186510.07..186510.08 rows=1 width=32)
                                         ->  Seq Scan on lineitem  (cost=0.00..186510.06 rows=1 width=5)
                                               Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date) AND (l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
 JIT:
   Functions: 27
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(23 rows)

COMMIT;
COMMIT
