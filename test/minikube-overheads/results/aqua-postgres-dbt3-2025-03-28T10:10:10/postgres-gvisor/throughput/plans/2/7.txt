BEGIN;
BEGIN
EXPLAIN
select
	supp_nation,
	cust_nation,
	l_year,
	sum(volume) as revenue
from
	(
		select
			n1.n_name as supp_nation,
			n2.n_name as cust_nation,
			extract(year from l_shipdate) as l_year,
			l_extendedprice * (1 - l_discount) as volume
		from
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2
		where
			s_suppkey = l_suppkey
			and o_orderkey = l_orderkey
			and c_custkey = o_custkey
			and s_nationkey = n1.n_nationkey
			and c_nationkey = n2.n_nationkey
			and (
				(n1.n_name = 'UNITED STATES' and n2.n_name = 'CANADA')
				or (n1.n_name = 'CANADA' and n2.n_name = 'UNITED STATES')
			)
			and l_shipdate between date '1995-01-01' and date '1996-12-31'
	) as shipping
group by
	supp_nation,
	cust_nation,
	l_year
order by
	supp_nation,
	cust_nation,
	l_year;
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=32810.99..33221.94 rows=3041 width=116)
   Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
   ->  Gather Merge  (cost=32810.99..33144.65 rows=2534 width=116)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=31810.96..31852.14 rows=1267 width=116)
               Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               ->  Sort  (cost=31810.96..31814.13 rows=1267 width=96)
                     Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                     ->  Hash Join  (cost=293.09..31745.67 rows=1267 width=96)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'CANADA'::bpchar)) OR ((n1.n_name = 'CANADA'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)))
                           ->  Nested Loop  (cost=2.25..31258.82 rows=38426 width=46)
                                 ->  Nested Loop  (cost=1.82..6922.79 rows=8383 width=34)
                                       ->  Hash Join  (cost=1.40..3924.17 rows=4375 width=30)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..3754.88 rows=54688 width=8)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30)
                                                         Filter: ((n_name = 'CANADA'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                       ->  Index Scan using orders_o_custkey_idx on orders  (cost=0.42..0.65 rows=4 width=12)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using pk_lineitem on lineitem  (cost=0.43..2.85 rows=5 width=28)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=282.92..282.92 rows=634 width=30)
                                 ->  Hash Join  (cost=1.40..282.92 rows=634 width=30)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..257.20 rows=7920 width=8)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30)
                                                   Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'CANADA'::bpchar))
(31 rows)

COMMIT;
COMMIT
