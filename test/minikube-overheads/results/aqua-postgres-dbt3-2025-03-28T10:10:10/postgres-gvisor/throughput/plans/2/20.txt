BEGIN;
BEGIN
EXPLAIN
select
	s_name,
	s_address
from
	supplier,
	nation
where
	s_suppkey in (
		select
			ps_suppkey
		from
			partsupp
		where
			ps_partkey in (
				select
					p_partkey
				from
					part
				where
					p_name like 'peru%'
			)
			and ps_availqty > (
				select
					0.5 * sum(l_quantity)
				from
					lineitem
				where
					l_partkey = ps_partkey
					and l_suppkey = ps_suppkey
					and l_shipdate >= '1993-01-01'
					and l_shipdate < cast(date '1993-01-01' + interval '1 year' as date)
			)
	)
	and s_nationkey = n_nationkey
	and n_name = 'BRAZIL'
order by
	s_name;
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1218241520.26..1218241520.39 rows=53 width=52)
   Sort Key: supplier.s_name
   ->  Nested Loop  (cost=0.42..1218241518.74 rows=53 width=52)
         Join Filter: (nation.n_nationkey = supplier.s_nationkey)
         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
               Filter: (n_name = 'BRAZIL'::bpchar)
         ->  Nested Loop Semi Join  (cost=0.42..1218241500.76 rows=1333 width=56)
               Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
               ->  Seq Scan on supplier  (cost=0.00..257.20 rows=7920 width=60)
               ->  Materialize  (cost=0.42..1218041188.57 rows=1684 width=4)
                     ->  Nested Loop  (cost=0.42..1218041180.15 rows=1684 width=4)
                           ->  Seq Scan on part  (cost=0.00..4450.70 rows=1347 width=4)
                                 Filter: ((p_name)::text ~~ 'peru%'::text)
                           ->  Index Scan using pk_partsupp on partsupp  (cost=0.42..904258.88 rows=1 width=8)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 SubPlan 1
                                   ->  Aggregate  (cost=226060.73..226060.74 rows=1 width=32)
                                         ->  Seq Scan on lineitem  (cost=0.00..226060.72 rows=1 width=5)
                                               Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
 JIT:
   Functions: 27
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(23 rows)

COMMIT;
COMMIT
