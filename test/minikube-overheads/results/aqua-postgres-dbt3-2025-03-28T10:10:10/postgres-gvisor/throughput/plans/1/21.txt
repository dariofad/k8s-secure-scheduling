BEGIN;
BEGIN
EXPLAIN
select
	s_name,
	count(*) as numwait
from
	supplier,
	lineitem l1,
	orders,
	nation
where
	s_suppkey = l1.l_suppkey
	and o_orderkey = l1.l_orderkey
	and o_orderstatus = 'F'
	and l1.l_receiptdate > l1.l_commitdate
	and exists (
		select
			*
		from
			lineitem l2
		where
			l2.l_orderkey = l1.l_orderkey
			and l2.l_suppkey <> l1.l_suppkey
	)
	and not exists (
		select
			*
		from
			lineitem l3
		where
			l3.l_orderkey = l1.l_orderkey
			and l3.l_suppkey <> l1.l_suppkey
			and l3.l_receiptdate > l3.l_commitdate
	)
	and s_nationkey = n_nationkey
	and n_name = 'INDIA'
group by
	s_name
order by
	numwait desc,
	s_name
LIMIT 100;
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26753.36..26753.36 rows=1 width=34)
   ->  Sort  (cost=26753.36..26753.36 rows=1 width=34)
         Sort Key: (count(*)) DESC, supplier.s_name
         ->  GroupAggregate  (cost=26753.33..26753.35 rows=1 width=34)
               Group Key: supplier.s_name
               ->  Sort  (cost=26753.33..26753.33 rows=1 width=26)
                     Sort Key: supplier.s_name
                     ->  Nested Loop Semi Join  (cost=11109.56..26753.32 rows=1 width=26)
                           Join Filter: (orders.o_orderkey = l2.l_orderkey)
                           ->  Gather  (cost=11109.13..26752.29 rows=1 width=46)
                                 Workers Planned: 2
                                 ->  Nested Loop Anti Join  (cost=10109.13..25752.19 rows=1 width=46)
                                       ->  Hash Join  (cost=10108.70..21821.28 rows=8035 width=46)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Merge Join  (cost=9821.89..20503.36 rows=253523 width=20)
                                                   Merge Cond: (orders.o_orderkey = l1.l_orderkey)
                                                   ->  Sort  (cost=9821.45..9949.12 rows=51068 width=8)
                                                         Sort Key: orders.o_orderkey
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..5827.90 rows=51068 width=8)
                                                               Filter: (o_orderstatus = 'F'::bpchar)
                                                   ->  Index Only Scan using lineitem_l_orderkey_l_suppkey_idx on lineitem l1  (cost=0.43..55913.88 rows=1919279 width=12)
                                             ->  Hash  (cost=282.84..282.84 rows=317 width=30)
                                                   ->  Hash Join  (cost=1.32..282.84 rows=317 width=30)
                                                         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on supplier  (cost=0.00..257.20 rows=7920 width=34)
                                                         ->  Hash  (cost=1.31..1.31 rows=1 width=4)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                                     Filter: (n_name = 'INDIA'::bpchar)
                                       ->  Index Only Scan using lineitem_l_orderkey_l_suppkey_idx on lineitem l3  (cost=0.43..0.56 rows=5 width=12)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: (l_suppkey <> l1.l_suppkey)
                           ->  Index Scan using pk_lineitem on lineitem l2  (cost=0.43..1.01 rows=15 width=12)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
(34 rows)

COMMIT;
COMMIT
