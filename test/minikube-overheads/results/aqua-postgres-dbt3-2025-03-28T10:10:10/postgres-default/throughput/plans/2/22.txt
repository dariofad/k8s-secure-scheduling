BEGIN;
BEGIN
EXPLAIN
select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substring(c_phone from 1 for 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substring(c_phone from 1 for 2) in
				('27', '31', '21', '11', '33', '34', '15')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substring(c_phone from 1 for 2) in
						('27', '31', '21', '11', '33', '34', '15')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as vip
group by
	cntrycode
order by
	cntrycode;
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=12199.97..12278.77 rows=590 width=72)
   Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
   InitPlan 1
     ->  Finalize Aggregate  (cost=5852.68..5852.69 rows=1 width=32)
           ->  Gather  (cost=5852.46..5852.67 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=4852.46..4852.47 rows=1 width=32)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..4847.91 rows=1819 width=6)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{27,31,21,11,33,34,15}'::text[])))
   ->  Gather Merge  (cost=6347.28..6410.84 rows=492 width=72)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=5347.26..5354.02 rows=246 width=72)
               Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               ->  Sort  (cost=5347.26..5347.87 rows=246 width=38)
                     Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                     ->  Nested Loop Anti Join  (cost=0.43..5337.49 rows=246 width=38)
                           ->  Parallel Seq Scan on customer  (cost=0.00..4847.91 rows=668 width=26)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{27,31,21,11,33,34,15}'::text[])))
                           ->  Index Only Scan using orders_o_custkey_idx on orders  (cost=0.43..3.12 rows=14 width=4)
                                 Index Cond: (o_custkey = customer.c_custkey)
(20 rows)

COMMIT;
COMMIT
