BEGIN;
BEGIN
EXPLAIN
select
	c_count,
	count(*) as custdist
from
	(
		select
			c_custkey,
			count(o_orderkey)
		from
			customer left outer join orders on
				c_custkey = o_custkey
				and o_comment not like '%pending%deposits%'
		group by
			c_custkey
	) as c_orders (c_custkey, c_count)
group by
	c_count
order by
	custdist desc,
	c_count desc;
                                                       QUERY PLAN                                                       
------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=126796.19..126796.69 rows=200 width=16)
   Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
   ->  HashAggregate  (cost=126786.54..126788.54 rows=200 width=16)
         Group Key: count(orders.o_orderkey)
         ->  Finalize GroupAggregate  (cost=89888.47..124724.04 rows=137500 width=12)
               Group Key: customer.c_custkey
               ->  Gather Merge  (cost=89888.47..121974.04 rows=275000 width=12)
                     Workers Planned: 2
                     ->  Sort  (cost=88888.45..89232.20 rows=137500 width=12)
                           Sort Key: customer.c_custkey
                           ->  Partial HashAggregate  (cost=68334.60..74801.46 rows=137500 width=12)
                                 Group Key: customer.c_custkey
                                 Planned Partitions: 4
                                 ->  Parallel Hash Right Join  (cost=4633.07..34932.03 rows=521406 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..28930.23 rows=521406 width=12)
                                             Filter: ((o_comment)::text !~~ '%pending%deposits%'::text)
                                       ->  Parallel Hash  (cost=3916.92..3916.92 rows=57292 width=4)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..3916.92 rows=57292 width=4)
 JIT:
   Functions: 20
   Options: Inlining false, Optimization false, Expressions true, Deforming true
(22 rows)

COMMIT;
COMMIT
